
events {
    # 워커 프로세스가 동시에 처리할 수 있는 커넥션의 수를 설정한다.
    # worker_connections  1024;  ## Default: 1024
}

http {
    include /etc/nginx/mime.types;
    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # 하나의 서버를 정의하는 블록
    server {
        listen 443 ssl default_server; # 443번 포트를 사용하고, 기본 서버로 설정한다. IPv4
        listen [::]:443 ssl default_server; # 윗줄과 동일하나, IPv6

        root /var/www; # 웹 서버의 루트 디렉토리를 설정한다.
        index index.html index.htm; # 기본 문서를 설정(우선순위 순서대로)

        # SSL 설정
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5; # HIGH: 모든 암호화 알고리즘을 사용하되, aNULL과 MD5는 사용하지 않는다.

        server_name localhost; # 현재 서버 블록의 이름을 설정한다. _는 모든 도메인을 의미한다.
        # 특정 경로에 대한 설정을 정의하는 블록
        location / {
            try_files $uri $uri/ =404; # url로 요청받은 파일이나 디렉토리가 존재하지 않을 경우 404 에러를 반환한다.
        }

        error_page 404 /html/404.html; # 404 에러가 발생했을 때, 404.html 파일을 반환한다.

        # /404.html 경로에 대한 설정을 정의하는 블록
        location /html/404.html {
            internal; # 이 위치의 페이지는 내부 오류 페이지로만 사용할 수 있다. 직접 접근할 수 없다.
        }

        # Client request size limit: 클라이언트가 보낼 수 있는 요청 본문의 최대 크기를 제한하여 이는 대량의 데이터 업로드를 방지하거나 DDoS 공격을 완화하는 데 도움
        client_max_body_size 10m;
    }
}
